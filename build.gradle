apply plugin: 'android-library'
apply plugin: 'maven'
apply plugin: 'signing'

group = "com.chocodev"
archivesBaseName = "chocolib"
version = "1.0.0"



buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'
        classpath 'com.github.dcendents:android-maven-plugin:1.0'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 21
        versionCode 2 
        versionName '1.0.1'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

repositories{
    mavenCentral()
}

dependencies {
<<<<<<< HEAD
    compile group: 'commons-io', name: 'commons-io', version: '2.0.1'
=======
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:recyclerview-v7:22.2.0'
>>>>>>> 72a6f2fb44f6382933fff5e5bd8bdd0a8c18253a
}

task installArchives(type: Upload) {
    description "Installs the artifacts to the local Maven repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository url: "file://${System.properties['user.home']}/.m2/repository"
            pom.groupId = 'com.chocodev'
            pom.artifactId = 'chocolib'
            pom.version = android.defaultConfig.versionName
        }
    }
}
task installArchivesToRemote(type: Upload) {
    description "Installs the artifacts to the remote Maven repository."
    configuration = configurations['archives']
    repositories {
        mavenDeployer {
            repository url: "http://repositorio.viavansi.com/libs-releases-local"
            pom.groupId = 'com.chocodev'
            pom.artifactId = 'chocolib'
            pom.version = android.defaultConfig.versionName
        }
    }
}
sourceSets {
    main {
        java {
            srcDirs = ['src']
        }
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allSource
}
/*
  task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier 'javadoc'
    from javadoc.destinationDir
}
*/

artifacts {
    archives /*javadocJar, */sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Example Application'
                packaging 'jar'
                // optionally artifactId can be defined here description 'A application used as an example on how to set up pushing  its components to the Central Repository.'
                url 'http://www.example.com/example-application'

                scm {
                    connection 'scm:svn:http://foo.googlecode.com/svn/trunk/'
                    developerConnection 'scm:svn:https://foo.googlecode.com/svn/trunk/'
                    url 'http://foo.googlecode.com/svn/trunk/'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'drmillan'
                        name 'Daniel Rodriguez'
                        email 'soynegativo@gmail.com'
                    }
                }
            }
        }
    }
}
